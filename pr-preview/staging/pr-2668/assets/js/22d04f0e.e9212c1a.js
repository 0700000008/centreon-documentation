"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[75228],{603905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>m});var t=r(667294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),u=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),g=o,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||a;return r?t.createElement(m,l(l({ref:n},c),{},{components:r})):t.createElement(m,l({ref:n},c))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},217205:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>p});r(667294);var t=r(603905);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))})),e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const i={id:"developer-gorgone-rebound-mode",title:"Configuring Gorgone in rebound mode"},s=void 0,u={unversionedId:"developer/developer-gorgone-rebound-mode",id:"version-22.10/developer/developer-gorgone-rebound-mode",title:"Configuring Gorgone in rebound mode",description:"This procedure describes how to configure Gorgone between a distant poller and a central server, via a rebound server.",source:"@site/versioned_docs/version-22.10/developer/developer-gorgone-rebound-mode.md",sourceDirName:"developer",slug:"/developer/developer-gorgone-rebound-mode",permalink:"/centreon-documentation/pr-preview/staging/pr-2668/docs/22.10/developer/developer-gorgone-rebound-mode",draft:!1,editUrl:"https://github.com/centreon/centreon-documentation/edit/staging/versioned_docs/version-22.10/developer/developer-gorgone-rebound-mode.md",tags:[],version:"22.10",lastUpdatedAt:1698314946,formattedLastUpdatedAt:"Oct 26, 2023",frontMatter:{id:"developer-gorgone-rebound-mode",title:"Configuring Gorgone in rebound mode"},sidebar:"version-22.10/docs",previous:{title:"Configuring Gorgone in pull mode",permalink:"/centreon-documentation/pr-preview/staging/pr-2668/docs/22.10/developer/developer-gorgone-pull-mode"},next:{title:"Introduction",permalink:"/centreon-documentation/pr-preview/staging/pr-2668/docs/22.10/api/introduction"}},c={},p=[{value:"On the distant poller side",id:"on-the-distant-poller-side",level:2},{value:"Installation requirements",id:"installation-requirements",level:3},{value:"Configuration",id:"configuration",level:3},{value:"On the rebound server side",id:"on-the-rebound-server-side",level:2},{value:"Installation requirements",id:"installation-requirements-1",level:3},{value:"Configuration",id:"configuration-1",level:3},{value:"On the central server side",id:"on-the-central-server-side",level:2},{value:"Installation requirements",id:"installation-requirements-2",level:3},{value:"Configuration",id:"configuration-2",level:3}],d={toc:p},g="wrapper";function m(e){var{components:n}=e,r=l(e,["components"]);return(0,t.kt)(g,a(function(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},t=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),t.forEach((function(n){o(e,n,r[n])}))}return e}({},d,r),{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"This procedure describes how to configure Gorgone between a distant poller and a central server, via a rebound server."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Note: In our case, we have the configuration described below (you have to adapt the procedure to your configuration).")),(0,t.kt)("p",null,"Central server:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"address: 10.30.2.203\nRebound server:"),(0,t.kt)("li",{parentName:"ul"},"id: 1024 (This id is an arbitrary number and must be unique)."),(0,t.kt)("li",{parentName:"ul"},"address: 10.30.2.67"),(0,t.kt)("li",{parentName:"ul"},"rsa public key thumbprint: NmnPME43IoWpkQoam6CLnrI5hjmdq6Kq8QMUCCg-F4g")),(0,t.kt)("p",null,"Distant Poller:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"id: 6 (configured in Centreon interface as zmq. You can get this id from the Centreon interface)"),(0,t.kt)("li",{parentName:"ul"},"address: 10.30.2.179"),(0,t.kt)("li",{parentName:"ul"},"rsa public key thumbprint: nJSH9nZN2ugQeksHif7Jtv19RQA58yjxfX-Cpnhx09s")),(0,t.kt)("h2",{id:"on-the-distant-poller-side"},"On the distant poller side"),(0,t.kt)("h3",{id:"installation-requirements"},"Installation requirements"),(0,t.kt)("p",null,"Ensure the distant poller and Gorgone are already installed."),(0,t.kt)("h3",{id:"configuration"},"Configuration"),(0,t.kt)("p",null,"Configure the file ",(0,t.kt)("strong",{parentName:"p"},"/etc/centreon-gorgone/config.d/40-gorgoned.yaml")," as follows:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'name:  distant-server\ndescription: Configuration for distant server\ngorgone:\n  gorgonecore:\n    id: 6\n    privkey: "/var/lib/centreon-gorgone/.keys/rsakey.priv.pem"\n    pubkey: "/var/lib/centreon-gorgone/.keys/rsakey.pub.pem"\n\n  modules:\n    - name: action\n      package: gorgone::modules::core::action::hooks\n      enable: true\n\n    - name: engine\n      package: gorgone::modules::centreon::engine::hooks\n      enable: true\n      command_file: "/var/lib/centreon-engine/rw/centengine.cmd"\n\n    - name: pull\n      package: "gorgone::modules::core::pull::hooks"\n      enable: true\n      target_type: tcp\n      target_path: 10.30.2.67:5556\n      ping: 1\n')),(0,t.kt)("h2",{id:"on-the-rebound-server-side"},"On the rebound server side"),(0,t.kt)("h3",{id:"installation-requirements-1"},"Installation requirements"),(0,t.kt)("p",null,"Ensure you have installed a CentOS 7 server."),(0,t.kt)("p",null,"Then install the Gorgone daemon using the following commands:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"yum install -y yum-utils\nyum-config-manager --add-repo https://packages.centreon.com/rpm-standard/22.10/el7/centreon-22.10.repo\nyum install centreon-gorgone\n")),(0,t.kt)("h3",{id:"configuration-1"},"Configuration"),(0,t.kt)("p",null,"Configure the file ",(0,t.kt)("strong",{parentName:"p"},"/etc/centreon-gorgone/config.d/40-gorgoned.yaml")," as follows:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'name:  rebound-server\ndescription: Configuration for rebound-server\ngorgone:\n  gorgonecore:\n    id: 1024\n    privkey: "/var/lib/centreon-gorgone/.keys/rsakey.priv.pem"\n    pubkey: "/var/lib/centreon-gorgone/.keys/rsakey.pub.pem"\n    external_com_type: tcp\n    external_com_path: "*:5556"\n    authorized_clients:\n        - key: nJSH9nZN2ugQeksHif7Jtv19RQA58yjxfX-Cpnhx09s\n\n  modules:\n    - name: proxy\n      package: "gorgone::modules::core::proxy::hooks"\n      enable: true\n\n    - name: pull\n      package: "gorgone::modules::core::pull::hooks"\n      enable: true\n      target_type: tcp\n      target_path: 10.30.2.203:5556\n      ping: 1\n')),(0,t.kt)("h2",{id:"on-the-central-server-side"},"On the central server side"),(0,t.kt)("h3",{id:"installation-requirements-2"},"Installation requirements"),(0,t.kt)("p",null,"Ensure the Central server and Gorgone are already installed."),(0,t.kt)("h3",{id:"configuration-2"},"Configuration"),(0,t.kt)("p",null,"Configure the file ",(0,t.kt)("strong",{parentName:"p"},"/etc/centreon-gorgone/config.d/40-gorgoned.yaml")," as follows:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'...\ngorgone:\n  gorgonecore:\n    ...\n    external_com_type: tcp\n    external_com_path: "*:5556"\n    authorized_clients:\n      - key: NmnPME43IoWpkQoam6CLnrI5hjmdq6Kq8QMUCCg-F4g\n    ...\n  modules:\n    ...\n    - name: register\n      package: "gorgone::modules::core::register::hooks"\n      enable: true\n      config_file: /etc/centreon-gorgone/nodes-register-override.yml\n    ...\n')),(0,t.kt)("p",null,"We created the file ",(0,t.kt)("strong",{parentName:"p"},"/etc/centreon-gorgone/nodes-register-override.yml"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"nodes:\n  - id: 1024\n    type: pull\n    prevail: 1\n    nodes:\n      - id: 6\n        pathscore: 1\n")))}m.isMDXComponent=!0}}]);